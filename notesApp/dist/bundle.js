(()=>{"use strict";var n={56:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},72:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var d=n[s],c=o.base?d[0]+o.base:d[0],l=a[c]||0,u="".concat(c," ").concat(l);a[c]=l+1;var p=e(u),h={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(h);else{var m=r(h,o);o.byIndex=s,t.splice(s,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=e(a[i]);t[s].references--}for(var d=o(n,r),c=0;c<a.length;c++){var l=e(a[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=d}}},106:(n,t,e)=>{e.d(t,{A:()=>s});var o=e(601),r=e.n(o),a=e(314),i=e.n(a)()(r());i.push([n.id,"/* src/style/style.css */\n/* Global Styles */\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f4f4f4;\n  margin: 0;\n  padding: 20px;\n  text-align: center;\n}\n\n/* Header */\nh1 {\n  color: white;\n  background-color: #ff6b6b;\n  padding: 15px;\n  border-radius: 8px;\n  font-size: 24px;\n  display: inline-block;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n/* Form Styling */\nform {\n  background: white;\n  padding: 15px;\n  margin: 20px auto;\n  width: 80%;\n  max-width: 400px;\n  border-radius: 8px;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\n}\n\ninput, textarea {\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n\nbutton {\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #ff6b6b;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background 0.3s ease;\n}\n\nbutton:hover {\n  background-color: #ff3b3b;\n}\n\n/* Notes Container */\nnote-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Responsive grid */\n  gap: 20px;\n  margin: 20px auto;\n  width: 90%;\n  max-width: 1200px;\n}\n\n/* Note Card */\n.note-item {\n  background: white;\n  padding: 15px;\n  border-radius: 8px;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\n  text-align: left;\n  transition: transform 0.2s;\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loading-content {\n  background: white;\n  padding: 15px 20px;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  font-size: 18px;\n  font-weight: bold;\n}\n\n\n.note-item:hover {\n  transform: translateY(-5px);\n}\n\n.note-item h3 {\n  margin: 0;\n  color: #333;\n}\n\n.note-item p {\n  font-size: 14px;\n  color: #666;\n}\n\n/* Button Styles */\n.note-item button {\n  width: auto;\n  margin-top: 10px;\n  padding: 8px;\n  font-size: 14px;\n  margin-right: 5px;\n}\n\n.archive-btn {\n  background-color: #4caf50;\n}\n\n.archive-btn:hover {\n  background-color: #388e3c;\n}\n\n.delete-btn {\n  background-color: #f44336;\n}\n\n.delete-btn:hover {\n  background-color: #d32f2f;\n}\n\n/* Responsive Grid: 4 per baris, menyesuaikan di layar kecil */\n@media (max-width: 1024px) {\n  note-list {\n      grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n@media (max-width: 768px) {\n  note-list {\n      grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media (max-width: 480px) {\n  note-list {\n      grid-template-columns: repeat(1, 1fr);\n  }\n}\n",""]);const s=i},113:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},314:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},540:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},601:n=>{n.exports=function(n){return n[1]}},659:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return n[o](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0;const o="https://notes-api.dicoding.dev/v2",r={async getNotes(){try{const n=await fetch(`${o}/notes`);if(!n.ok)throw new Error("Gagal mengambil data dari API");return(await n.json()).data}catch(n){return console.error("Error fetching notes:",n),[]}},async getArchivedNotes(){try{const n=await fetch(`${o}/notes/archived`);if(!n.ok)throw new Error("Gagal mengambil data arsip");return(await n.json()).data}catch(n){return console.error("Error fetching archived notes:",n),[]}},async createNote({title:n,body:t}){try{const e=await fetch(`${o}/notes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:n,body:t})});if(!e.ok)throw new Error("Gagal membuat catatan");return await e.json()}catch(n){return console.error("Error creating note:",n),null}},async deleteNote(n){try{const t=await fetch(`${o}/notes/${n}`,{method:"DELETE"});return t.ok?await t.json():null}catch(n){return console.error("Error deleting note:",n),null}},async archiveNote(n){try{const t=await fetch(`${o}/notes/${n}/archive`,{method:"POST"});return t.ok?await t.json():null}catch(n){return console.error("Error archiving note:",n),null}},async unarchiveNote(n){try{const t=await fetch(`${o}/notes/${n}/unarchive`,{method:"POST"});return t.ok?await t.json():null}catch(n){return console.error("Error unarchiving note:",n),null}}};class a extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='<ul id="noteList"></ul>'}connectedCallback(){document.addEventListener("update-notes",(n=>{const t=n.detail?.notes||[];if(console.log("Menampilkan catatan:",t),!Array.isArray(t)||0===t.length)return void console.warn("Tidak ada catatan untuk ditampilkan!");const e=this.shadowRoot.getElementById("noteList");e.innerHTML="",t.forEach((n=>{const t=document.createElement("li");t.textContent=`${n.title} - ${n.body}`,e.appendChild(t)}))}))}}customElements.define("note-list",a);class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n          <form id="noteForm">\n              <input type="text" id="title" placeholder="Judul Catatan" required />\n              <textarea id="body" placeholder="Isi Catatan" required></textarea>\n              <button type="submit">Tambah Catatan</button>\n          </form>\n      '}connectedCallback(){this.shadowRoot.getElementById("noteForm").addEventListener("submit",(n=>{n.preventDefault();const t=this.shadowRoot.getElementById("title").value.trim(),e=this.shadowRoot.getElementById("body").value.trim();if(!t||!e)return void console.warn("Judul dan isi tidak boleh kosong!");const o={id:`notes-${Date.now()}`,title:t,body:e,createdAt:(new Date).toISOString(),archived:!1};console.log("Data sebelum dikirim ke event:",o),document.dispatchEvent(new CustomEvent("update-notes",{detail:{notes:[o]}})),this.shadowRoot.getElementById("title").value="",this.shadowRoot.getElementById("body").value=""}))}}customElements.define("note-form",i);class s extends HTMLElement{connectedCallback(){this.render()}render(){this.innerHTML='\n      <div class="loading-overlay">\n        <div class="loading-content">\n          <p>Loading...</p>\n        </div>\n      </div>\n    '}}customElements.define("loading-indicator",s);var d=e(72),c=e.n(d),l=e(825),u=e.n(l),p=e(659),h=e.n(p),m=e(56),f=e.n(m),g=e(540),v=e.n(g),b=e(113),x=e.n(b),y=e(106),w={};w.styleTagTransform=x(),w.setAttributes=f(),w.insert=h().bind(null,"head"),w.domAPI=u(),w.insertStyleElement=v(),c()(y.A,w),y.A&&y.A.locals&&y.A.locals,document.addEventListener("DOMContentLoaded",(async()=>{const n=document.querySelector("note-list"),t=document.createElement("archive-list");t.classList.add("archive-notes"),document.body.appendChild(t);const e=document.createElement("loading-indicator");document.body.appendChild(e);try{n.notes=await r.getNotes(),t.notes=await r.getArchivedNotes()}catch(n){console.log("Gagal mengambil data:",n)}finally{document.body.removeChild(e)}document.addEventListener("update-notes",(n=>{console.log("Event 'update-notes' diterima di index.js, memperbarui catatan...");const t=n.detail;console.log("Catatan setelah diperbarui:",t),t&&0!==t.length||console.warn("Catatan kosong atau tidak ditemukan!")}))}))})();