(()=>{"use strict";const t={async getNotes(){try{const t=await fetch(`${BASE_URL}/notes`);if(!t.ok)throw new Error("Gagal mengambil data dari API");return(await t.json()).data}catch(t){return console.error("Error fetching notes:",t),[]}},async createNote(t,e){try{const n=await fetch(`${BASE_URL}/notes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,body:e})});if(!n.ok)throw new Error("Gagal membuat catatan baru");return await n.json()}catch(t){return console.error("Error creating note:",t),null}},async deleteNote(t){try{const e=await fetch(`${BASE_URL}/notes/${t}`,{method:"DELETE"});if(!e.ok)throw new Error("Gagal menghapus catatan");return await e.json()}catch(t){return console.error("Error deleting note:",t),null}},async archiveNote(t){try{const e=await fetch(`${BASE_URL}/notes/${t}/archive`,{method:"POST"});if(!e.ok)throw new Error("Gagal mengarsipkan catatan");return await e.json()}catch(t){return console.error("Error archiving note:",t),null}},async unarchiveNote(t){try{const e=await fetch(`${BASE_URL}/notes/${t}/unarchive`,{method:"POST"});if(!e.ok)throw new Error("Gagal mengembalikan catatan dari arsip");return await e.json()}catch(t){return console.error("Error unarchiving note:",t),null}}};function e(e){const n=document.getElementById("note-list");n.innerHTML="",e.forEach((e=>{const r=function(e){const n=document.createElement("div");return n.classList.add("note-item"),n.innerHTML=`\n    <h3>${e.title}</h3>\n    <p>${e.body}</p>\n    <button class="archive-btn">Archive</button>\n    <button class="delete-btn">Delete</button>\n  `,n.querySelector(".archive-btn").addEventListener("click",(async()=>{await t.archiveNote(e.id),n.remove()})),n.querySelector(".delete-btn").addEventListener("click",(async()=>{await t.deleteNote(e.id),n.remove()})),n}(e);n.appendChild(r)}))}document.addEventListener("DOMContentLoaded",(async()=>{document.getElementById("list-notes").appendChild(function(){const n=document.createElement("form");return n.innerHTML='\n    <input type="text" id="title" placeholder="Title" required />\n    <textarea id="body" placeholder="Note content" required></textarea>\n    <button type="submit">Add Note</button>\n  ',n.addEventListener("submit",(async r=>{r.preventDefault();const a={title:n.querySelector("#title").value,body:n.querySelector("#body").value};await t.createNote(a),e(await t.getNotes())})),n}());try{e(await t.getNotes())}catch(t){console.error("Gagal mengambil catatan:",t)}}))})();